{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projetos-GitHub\\\\Blog--Tecnologia\\\\src\\\\Components\\\\Conteudo\\\\Posts\\\\Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport './Posts.css';\nimport { Col, Card, Button } from 'react-bootstrap';\nimport TemaContext from '../../../contexts/TemaContext';\nimport removerPostServico from '../../../utils/removerPostServico';\nimport pegarCategoriaPeloId from '../../../utils/pegarCategoriaPeloId';\nimport formatarData from '../../../utils/formatarData';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CardPost = ({\n  postagem,\n  texto,\n  atualizacao,\n  imagem,\n  idCategoria,\n  PostId,\n  idTipoPostagem\n}) => {\n  _s();\n\n  const [postRemovido, setpostRemovido] = useState(false);\n  const [nomeCategoria, setNomeCategoria] = useState('');\n  useEffect(async () => {\n    const categoria = await pegarCategoriaPeloId(idCategoria);\n    setNomeCategoria(categoria.descricao);\n  }, []);\n  const tema = useContext(TemaContext);\n\n  const removerPost = async () => {\n    const resultado = await removerPostServico(PostId);\n\n    if (resultado.sucesso) {\n      setpostRemovido(true);\n      alert(resultado.mensagem);\n      return false;\n    }\n\n    alert(resultado.mensagem);\n    setpostRemovido(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: postRemovido ? null : /*#__PURE__*/_jsxDEV(Col, {\n      className: \"col\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => removerPost(),\n        variant: \"danger\",\n        size: \"sm\",\n        style: {\n          position: 'absolute',\n          top: '10px',\n          right: '24px',\n          zIndex: '3'\n        },\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"p-2\",\n        bg: tema.objVariant,\n        text: tema.objFontVariant,\n        children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n          variant: \"top\",\n          alt: \"img\",\n          src: imagem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: [idTipoPostagem === 1 ? \"NOTICIA\" : \"ANALISE\", \"! \", postagem]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: nomeCategoria\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [texto.slice(0, 168), \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/pagina-post/${PostId}`,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: tema.botaoVariant,\n              children: \"Leia Mais\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-muted\",\n            children: atualizacao ? formatarData(atualizacao) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(CardPost, \"eMHt1LMMEAPfF+Inrbuqx9iVl0g=\");\n\n_c = CardPost;\n\nconst Posts = ({\n  titulo,\n  corpoTexto,\n  atualizacao,\n  imagem,\n  id,\n  idCategoria,\n  idTipoPostagem\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CardPost, {\n      imagem: imagem,\n      postagem: titulo,\n      texto: corpoTexto,\n      atualizacao: atualizacao,\n      PostId: id,\n      idCategoria: idCategoria,\n      idTipoPostagem: idTipoPostagem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c2 = Posts;\nexport default Posts;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CardPost\");\n$RefreshReg$(_c2, \"Posts\");","map":{"version":3,"sources":["D:/Projetos-GitHub/Blog--Tecnologia/src/Components/Conteudo/Posts/Posts.js"],"names":["React","useContext","useEffect","useState","Col","Card","Button","TemaContext","removerPostServico","pegarCategoriaPeloId","formatarData","Link","CardPost","postagem","texto","atualizacao","imagem","idCategoria","PostId","idTipoPostagem","postRemovido","setpostRemovido","nomeCategoria","setNomeCategoria","categoria","descricao","tema","removerPost","resultado","sucesso","alert","mensagem","position","top","right","zIndex","objVariant","objFontVariant","slice","botaoVariant","Posts","titulo","corpoTexto","id"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react'\r\nimport './Posts.css'\r\n\r\nimport {Col, Card, Button} from 'react-bootstrap'\r\n\r\nimport TemaContext from '../../../contexts/TemaContext'\r\nimport removerPostServico from '../../../utils/removerPostServico'\r\nimport pegarCategoriaPeloId from '../../../utils/pegarCategoriaPeloId'\r\nimport formatarData from '../../../utils/formatarData'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CardPost = ({postagem, texto, atualizacao, imagem, idCategoria, PostId, idTipoPostagem}) => {\r\n\r\n    const [postRemovido, setpostRemovido] = useState(false)\r\n    const [nomeCategoria, setNomeCategoria] = useState('')\r\n\r\n    useEffect(async ()=>{\r\n        const categoria = await pegarCategoriaPeloId(idCategoria)\r\n        setNomeCategoria(categoria.descricao)\r\n    },[])\r\n\r\n    const tema = useContext(TemaContext)\r\n\r\n    const removerPost = async () => {\r\n        \r\n        const resultado = await removerPostServico(PostId)\r\n\r\n        if(resultado.sucesso){\r\n            setpostRemovido(true)\r\n            alert(resultado.mensagem)\r\n            return false\r\n        }\r\n        alert(resultado.mensagem)\r\n        setpostRemovido(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        { postRemovido ? null :\r\n            <Col className=\"col\">       \r\n                <Button \r\n                    onClick={ () => removerPost() }\r\n                    variant=\"danger\"\r\n                    size=\"sm\"\r\n                    style={{\r\n                        position: 'absolute',\r\n                        top: '10px',\r\n                        right: '24px',\r\n                        zIndex: '3'\r\n                    }}\r\n                >X</Button>\r\n\r\n                <Card className=\"p-2\" bg={tema.objVariant} text={tema.objFontVariant}>\r\n                    <Card.Img \r\n                        variant= \"top\"\r\n                        alt=\"img\"\r\n                        src={imagem}\r\n                    />\r\n                    <Card.Body>\r\n                        <Card.Title>{idTipoPostagem === 1 ? \"NOTICIA\" : \"ANALISE\"}! {postagem}</Card.Title>\r\n                        <Card.Text>\r\n                            {nomeCategoria}\r\n                        </Card.Text>\r\n                        <Card.Text>\r\n                            {texto.slice(0,168)}...\r\n                        </Card.Text>\r\n                                <Link to={`/pagina-post/${PostId}`}>\r\n                                    <Button variant={tema.botaoVariant}>Leia Mais</Button>\r\n                                </Link>\r\n                                \r\n                        \r\n                    </Card.Body>\r\n                    \r\n                    <Card.Footer>\r\n                        <small className=\"text-muted\">\r\n                            {atualizacao ? formatarData(atualizacao): null}\r\n                        </small>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </Col>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst Posts = ({titulo, corpoTexto, atualizacao, imagem, id, idCategoria, idTipoPostagem}) => {\r\n    return (\r\n        <>      \r\n            <CardPost\r\n                imagem={imagem}\r\n                postagem={titulo}\r\n                texto={corpoTexto}\r\n                atualizacao={atualizacao}\r\n                PostId={id}\r\n                idCategoria={idCategoria}\r\n                idTipoPostagem={idTipoPostagem}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Posts"]},"metadata":{},"sourceType":"module"}