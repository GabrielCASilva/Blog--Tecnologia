{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projetos-GitHub\\\\Blog--Tecnologia\\\\src\\\\Components\\\\Pages\\\\PaginaAnalises\\\\PaginaAnalises.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport SubMenu from '../../Conteudo/SubMenu/SubMenu';\nimport Posts from '../../Conteudo/Posts/Posts';\nimport getPostsInicio from '../../../utils/getPostsInicio';\nimport Filters from '../../Conteudo/Filters/Filters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PaginaAnalises = () => {\n  _s();\n\n  const [listaPostAnalise, setListaPostAnalise] = useState([]);\n  const [filtros, setFiltros] = useState([]);\n  useEffect(async () => {\n    const post = await getPostsInicio();\n    setListaPostAnalise(post);\n  }, []);\n\n  const postAnaliseMap = () => {\n    if (listaPostAnalise.length > 0) {\n      let listaPost = listaPostAnalise;\n\n      if (filtros.length > 0 && filtros.indexOf(0) === -1) {\n        listaPost = listaPost.filter(item => {\n          return filtros.indexOf(item.idCategoria) > -1;\n        });\n      }\n\n      return listaPost.map(item => {\n        if (item.idTipoPostagem === 2) {\n          return /*#__PURE__*/_jsxDEV(Posts, {\n            id: item.id,\n            imagem: item.imagem,\n            titulo: item.titulo,\n            corpoTexto: item.descricao,\n            atualizacao: item.dataPostagem\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this);\n        } else {\n          return null;\n        }\n      });\n    }\n  };\n\n  const adicionarFiltro = idCategoria => {\n    if (idCategoria === 0) {\n      setFiltros([idCategoria]);\n      return;\n    }\n\n    let filtro = [...filtros];\n\n    if (filtro.indexOf(0) === 0) {\n      filtro.splice(0, 1);\n    }\n\n    let indexFiltro = filtros.indexOf(idCategoria);\n\n    if (indexFiltro === -1) {\n      filtro.push(idCategoria);\n      setFiltros(filtro);\n    } else {\n      filtro.splice(indexFiltro, 1);\n      setFiltros(filtro);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          'margin': '20px 0 0 0'\n        },\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(Filters, {\n            adicionarFiltro: adicionarFiltro,\n            filtros: filtros\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        xs: 1,\n        md: 4,\n        lg: 3,\n        className: \"row\",\n        style: {\n          'marginBottom': '0'\n        },\n        children: postAnaliseMap()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(PaginaAnalises, \"BN0oEyJ4gYqf5jZOtbjOUDi1JdE=\");\n\n_c = PaginaAnalises;\nexport default PaginaAnalises;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaginaAnalises\");","map":{"version":3,"sources":["D:/Projetos-GitHub/Blog--Tecnologia/src/Components/Pages/PaginaAnalises/PaginaAnalises.js"],"names":["React","useState","useEffect","Container","Row","Col","SubMenu","Posts","getPostsInicio","Filters","PaginaAnalises","listaPostAnalise","setListaPostAnalise","filtros","setFiltros","post","postAnaliseMap","length","listaPost","indexOf","filter","item","idCategoria","map","idTipoPostagem","id","imagem","titulo","descricao","dataPostagem","adicionarFiltro","filtro","splice","indexFiltro","push"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react'\r\n\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\n\r\nimport SubMenu from '../../Conteudo/SubMenu/SubMenu'\r\nimport Posts from '../../Conteudo/Posts/Posts'\r\n\r\nimport getPostsInicio from '../../../utils/getPostsInicio'\r\nimport Filters from '../../Conteudo/Filters/Filters'\r\n\r\nconst PaginaAnalises = () => {\r\n    const [listaPostAnalise, setListaPostAnalise] = useState([])\r\n    const [filtros, setFiltros] = useState([])\r\n\r\n    useEffect(async () => {\r\n        const post = await getPostsInicio()\r\n        setListaPostAnalise(post)\r\n    }, [])\r\n\r\n    const postAnaliseMap = () => {\r\n        if(listaPostAnalise.length > 0){\r\n            let listaPost = listaPostAnalise\r\n            if(filtros.length > 0 && filtros.indexOf(0) === -1){\r\n                listaPost = listaPost.filter(item => {\r\n                    return filtros.indexOf(item.idCategoria) > -1\r\n                })\r\n            }\r\n            return listaPost.map(item =>{\r\n                if(item.idTipoPostagem === 2){\r\n                    return(\r\n                        <Posts\r\n                            key={item.id}\r\n                            id={item.id}\r\n                            imagem={item.imagem}\r\n                            titulo={item.titulo}\r\n                            corpoTexto={item.descricao}\r\n                            atualizacao={item.dataPostagem}\r\n                        />\r\n                    )\r\n                }else{\r\n                    return null\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const adicionarFiltro = (idCategoria) => {\r\n        if(idCategoria === 0){\r\n            setFiltros([idCategoria])\r\n            return\r\n        }\r\n        let filtro = [...filtros]\r\n        \r\n        if(filtro.indexOf(0) === 0){\r\n            filtro.splice(0,1)\r\n        }\r\n\r\n        let indexFiltro = filtros.indexOf(idCategoria)\r\n        \r\n        if(indexFiltro === -1){\r\n            filtro.push(idCategoria)\r\n            setFiltros(filtro)\r\n        }else{\r\n                    \r\n            filtro.splice(indexFiltro, 1)\r\n            setFiltros(filtro)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Row\r\n                    style={{\r\n                        'margin': '20px 0 0 0'\r\n                    }}\r\n                >\r\n                    <Col md=\"auto\">\r\n                        <Filters\r\n                            adicionarFiltro={adicionarFiltro}\r\n                            filtros={filtros}\r\n                        />\r\n                    </Col>        \r\n                </Row>\r\n                <Row xs={1} md={4} lg={3}\r\n                    className=\"row\"\r\n                    style={{\r\n                        'marginBottom': '0'\r\n                    }}\r\n                >\r\n                    {postAnaliseMap()}\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PaginaAnalises"]},"metadata":{},"sourceType":"module"}