[{"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\index.js":"1","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\reportWebVitals.js":"2","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\App.js":"3","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Pages\\PaginaRotas\\PaginaRotas.js":"4","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Pages\\PaginaInicial\\PaginaInicial.js":"5","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Conteudo\\Header\\Header.js":"6","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Conteudo\\MyCarousel\\MyCarousel.js":"7","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Conteudo\\Posts\\Posts.js":"8","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Pages\\PaginaCategorias\\PaginaCategorias.js":"9","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Pages\\PaginaAnalises\\PaginaAnalises.js":"10","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Pages\\PaginaNoticias\\PaginaNoticias.js":"11","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Pages\\PaginaSobre\\PaginaSobre.js":"12","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Pages\\PaginaPerfil\\PaginaPerfil.js":"13","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\contexts\\TemaContext.js":"14","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\utils\\estilosTema.js":"15","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\utils\\getCategorias.js":"16","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Conteudo\\SubMenu\\SubMenu.js":"17","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\utils\\getPostsAnalises.js":"18","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\utils\\getPostsInicio.js":"19","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\utils\\getPostsNoticias.js":"20","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\utils\\getInicioCarrossel.js":"21","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\utils\\getNoticiasCarrossel.js":"22","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Conteudo\\Footer\\Footer.js":"23","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\index.js":"24","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\reportWebVitals.js":"25","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\App.js":"26","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaRotas\\PaginaRotas.js":"27","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaCategorias\\PaginaCategorias.js":"28","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaInicial\\PaginaInicial.js":"29","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaAnalises\\PaginaAnalises.js":"30","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaSobre\\PaginaSobre.js":"31","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\contexts\\TemaContext.js":"32","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaPerfil\\PaginaPerfil.js":"33","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaNoticias\\PaginaNoticias.js":"34","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\utils\\estilosTema.js":"35","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\utils\\getCategorias.js":"36","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Conteudo\\Header\\Header.js":"37","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Conteudo\\Footer\\Footer.js":"38","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\utils\\getInicioCarrossel.js":"39","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\utils\\getPostsInicio.js":"40","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\utils\\getNoticiasCarrossel.js":"41","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Conteudo\\Posts\\Posts.js":"42","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Conteudo\\MyCarousel\\MyCarousel.js":"43","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Conteudo\\SubMenu\\SubMenu.js":"44","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Conteudo\\Login\\Login.js":"45","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaLogin\\PaginaLogin.js":"46","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Conteudo\\Filters\\Filters.js":"47","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaPost\\PaginaPost.js":"48","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\config\\http.js":"49","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaNovoPost\\PaginaNovoPost.js":"50","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\utils\\salvarNovoPost.js":"51","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\utils\\removerPostServico.js":"52","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaNovaCategoria\\PaginaNovaCategoria.js":"53","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\utils\\salvarNovaCategoria.js":"54","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\utils\\removerCategoriaServico.js":"55","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\utils\\getDetalhesPost.js":"56","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\utils\\formatarData.js":"57","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\utils\\pegarCategoriaPeloId.js":"58"},{"size":265,"mtime":1622900773677,"results":"59","hashOfConfig":"60"},{"size":362,"mtime":1619483562581,"results":"61","hashOfConfig":"60"},{"size":204,"mtime":1622903843466,"results":"62","hashOfConfig":"60"},{"size":2921,"mtime":1622948882556,"results":"63","hashOfConfig":"60"},{"size":2126,"mtime":1623088271484,"results":"64","hashOfConfig":"60"},{"size":3927,"mtime":1622950008164,"results":"65","hashOfConfig":"60"},{"size":522,"mtime":1623087860567,"results":"66","hashOfConfig":"60"},{"size":1572,"mtime":1623086127547,"results":"67","hashOfConfig":"60"},{"size":1377,"mtime":1622949627826,"results":"68","hashOfConfig":"60"},{"size":1269,"mtime":1623084628917,"results":"69","hashOfConfig":"60"},{"size":2213,"mtime":1623088376241,"results":"70","hashOfConfig":"60"},{"size":143,"mtime":1622926334335,"results":"71","hashOfConfig":"60"},{"size":145,"mtime":1622926366377,"results":"72","hashOfConfig":"60"},{"size":100,"mtime":1622929738076,"results":"73","hashOfConfig":"60"},{"size":578,"mtime":1622934045709,"results":"74","hashOfConfig":"60"},{"size":394,"mtime":1622948636004,"results":"75","hashOfConfig":"60"},{"size":511,"mtime":1623082802853,"results":"76","hashOfConfig":"60"},{"size":2633,"mtime":1623084572949,"results":"77","hashOfConfig":"60"},{"size":2625,"mtime":1623085470920,"results":"78","hashOfConfig":"60"},{"size":2633,"mtime":1623085750110,"results":"79","hashOfConfig":"60"},{"size":808,"mtime":1623087438135,"results":"80","hashOfConfig":"60"},{"size":816,"mtime":1623087091834,"results":"81","hashOfConfig":"60"},{"size":556,"mtime":1622933820259,"results":"82","hashOfConfig":"60"},{"size":265,"mtime":1622900773677,"results":"83","hashOfConfig":"84"},{"size":362,"mtime":1619483562581,"results":"85","hashOfConfig":"84"},{"size":204,"mtime":1622903843466,"results":"86","hashOfConfig":"84"},{"size":4040,"mtime":1626617269798,"results":"87","hashOfConfig":"84"},{"size":2562,"mtime":1626617507425,"results":"88","hashOfConfig":"84"},{"size":3825,"mtime":1625272982754,"results":"89","hashOfConfig":"84"},{"size":2954,"mtime":1625272975111,"results":"90","hashOfConfig":"84"},{"size":143,"mtime":1622926334335,"results":"91","hashOfConfig":"84"},{"size":100,"mtime":1622929738076,"results":"92","hashOfConfig":"84"},{"size":137,"mtime":1623190959696,"results":"93","hashOfConfig":"84"},{"size":3872,"mtime":1625272079660,"results":"94","hashOfConfig":"84"},{"size":748,"mtime":1623459220946,"results":"95","hashOfConfig":"84"},{"size":367,"mtime":1625011994470,"results":"96","hashOfConfig":"84"},{"size":2987,"mtime":1626617279643,"results":"97","hashOfConfig":"84"},{"size":556,"mtime":1622933820259,"results":"98","hashOfConfig":"84"},{"size":808,"mtime":1623619211024,"results":"99","hashOfConfig":"84"},{"size":293,"mtime":1625011187342,"results":"100","hashOfConfig":"84"},{"size":816,"mtime":1623087091834,"results":"101","hashOfConfig":"84"},{"size":3476,"mtime":1625354885687,"results":"102","hashOfConfig":"84"},{"size":541,"mtime":1625012039491,"results":"103","hashOfConfig":"84"},{"size":615,"mtime":1624926904900,"results":"104","hashOfConfig":"84"},{"size":1849,"mtime":1623181222176,"results":"105","hashOfConfig":"84"},{"size":265,"mtime":1623200308409,"results":"106","hashOfConfig":"84"},{"size":1404,"mtime":1624667868855,"results":"107","hashOfConfig":"84"},{"size":1554,"mtime":1625354919164,"results":"108","hashOfConfig":"84"},{"size":104,"mtime":1624667568013,"results":"109","hashOfConfig":"84"},{"size":7709,"mtime":1626618755490,"results":"110","hashOfConfig":"84"},{"size":588,"mtime":1625007146351,"results":"111","hashOfConfig":"84"},{"size":512,"mtime":1625000310082,"results":"112","hashOfConfig":"84"},{"size":2628,"mtime":1626617858685,"results":"113","hashOfConfig":"84"},{"size":623,"mtime":1625007232818,"results":"114","hashOfConfig":"84"},{"size":542,"mtime":1625005767070,"results":"115","hashOfConfig":"84"},{"size":301,"mtime":1625181157509,"results":"116","hashOfConfig":"84"},{"size":333,"mtime":1625269803223,"results":"117","hashOfConfig":"84"},{"size":325,"mtime":1625271624141,"results":"118","hashOfConfig":"84"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},"1jxon0l",{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},"e9t3g2",{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"168"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"168"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"168"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"168"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"168"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"168"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\index.js",[],["245","246"],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\reportWebVitals.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\App.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Pages\\PaginaRotas\\PaginaRotas.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Pages\\PaginaInicial\\PaginaInicial.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Conteudo\\Header\\Header.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Conteudo\\MyCarousel\\MyCarousel.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Conteudo\\Posts\\Posts.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Pages\\PaginaCategorias\\PaginaCategorias.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Pages\\PaginaAnalises\\PaginaAnalises.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Pages\\PaginaNoticias\\PaginaNoticias.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Pages\\PaginaSobre\\PaginaSobre.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Pages\\PaginaPerfil\\PaginaPerfil.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\contexts\\TemaContext.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\utils\\estilosTema.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\utils\\getCategorias.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Conteudo\\SubMenu\\SubMenu.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\utils\\getPostsAnalises.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\utils\\getPostsInicio.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\utils\\getPostsNoticias.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\utils\\getInicioCarrossel.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\utils\\getNoticiasCarrossel.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Conteudo\\Footer\\Footer.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\index.js",[],["247","248"],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\reportWebVitals.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\App.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaRotas\\PaginaRotas.js",["249"],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaCategorias\\PaginaCategorias.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaInicial\\PaginaInicial.js",["250"],"import React,{useState, useEffect} from 'react'\r\n\r\nimport {Container, Row, Carousel, Col} from 'react-bootstrap'\r\n\r\nimport MyCarousel from '../../Conteudo/MyCarousel/MyCarousel'\r\nimport Posts from '../../Conteudo/Posts/Posts'\r\n\r\nimport getPostsInicio from '../../../utils/getPostsInicio'\r\nimport Filters from '../../Conteudo/Filters/Filters'\r\nimport SubMenu from '../../Conteudo/SubMenu/SubMenu'\r\n\r\nconst PaginaInicial = () => {\r\n    const [listaPostInicio, setListaPostInicio] = useState([])\r\n    const [listaCarrosselInicio, setListaCarrosselInicio] = useState([])\r\n    const [filtros, setFiltros] = useState([])\r\n\r\n    useEffect(async() => {\r\n        const posts = await getPostsInicio()\r\n        setListaPostInicio(posts)\r\n        setListaCarrosselInicio(posts.slice(0,3))\r\n    },[])\r\n\r\n    const postInicioMap = () => {\r\n        if(listaPostInicio.length > 0){\r\n            let listaPost = listaPostInicio\r\n            if(filtros.length > 0 && filtros.indexOf(0) === -1){\r\n                listaPost = listaPost.filter(item => {\r\n                    return filtros.indexOf(item.idCategoria) > -1\r\n                })\r\n            }\r\n            \r\n            return listaPost.map(item => {\r\n                return (\r\n                    <Posts\r\n                        key={item.id}\r\n                        id={item.id}\r\n                        imagem={item.imagem}\r\n                        titulo={item.titulo}\r\n                        corpoTexto={item.descricao}\r\n                        atualizacao={item.dataPostagem}\r\n                        idCategoria={item.idCategoria}\r\n                        idTipoPostagem={item.idTipoPostagem}\r\n                    />\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    const inicioCarrosselMap = () => {\r\n        if(listaCarrosselInicio.length > 0){\r\n            return listaCarrosselInicio.map(item => {\r\n                return (\r\n                    <Carousel.Item interval={3000}\r\n                        key={item.id}\r\n                    >\r\n                        <MyCarousel\r\n                            imagem={item.imagem}\r\n                            titulo={item.titulo}\r\n                            texto={item.descricao}\r\n                        />\r\n                    </Carousel.Item>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    const adicionarFiltro = (idCategoria) => {\r\n        if(idCategoria === 0){\r\n            setFiltros([idCategoria])\r\n            return\r\n        }\r\n        let filtro = [...filtros]\r\n        \r\n        if(filtro.indexOf(0) === 0){\r\n            filtro.splice(0,1)\r\n        }\r\n\r\n        let indexFiltro = filtros.indexOf(idCategoria)\r\n        \r\n        if(indexFiltro === -1){\r\n            filtro.push(idCategoria)\r\n            setFiltros(filtro)\r\n        }else{\r\n                    \r\n            filtro.splice(indexFiltro, 1)\r\n            setFiltros(filtro)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <SubMenu/>\r\n            <Carousel>\r\n                {inicioCarrosselMap()}\r\n            </Carousel>\r\n            <Container>\r\n                <Row\r\n                    style={{\r\n                        'margin': '20px 0 0 0'\r\n                    }}\r\n                >\r\n                    <Col md=\"auto\">\r\n                        <Filters\r\n                            adicionarFiltro={adicionarFiltro}\r\n                            filtros={filtros}\r\n                        />\r\n                    </Col>        \r\n                </Row>\r\n                <Row xs={1} md={4} lg={3}\r\n                    className=\"row\"\r\n                    style={{\r\n                        'marginBottom': '0'\r\n                    }}\r\n                >\r\n                    {postInicioMap()}\r\n                </Row>\r\n            </Container>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default PaginaInicial","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaAnalises\\PaginaAnalises.js",["251"],"import React,{useState, useEffect} from 'react'\r\n\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\n\r\nimport Posts from '../../Conteudo/Posts/Posts'\r\n\r\nimport getPostsInicio from '../../../utils/getPostsInicio'\r\nimport Filters from '../../Conteudo/Filters/Filters'\r\n\r\nconst PaginaAnalises = () => {\r\n    const [listaPostAnalise, setListaPostAnalise] = useState([])\r\n    const [filtros, setFiltros] = useState([])\r\n\r\n    useEffect(async () => {\r\n        const post = await getPostsInicio()\r\n        setListaPostAnalise(post)\r\n    }, [])\r\n\r\n    const postAnaliseMap = () => {\r\n        if(listaPostAnalise.length > 0){\r\n            let listaPost = listaPostAnalise\r\n            if(filtros.length > 0 && filtros.indexOf(0) === -1){\r\n                listaPost = listaPost.filter(item => {\r\n                    return filtros.indexOf(item.idCategoria) > -1\r\n                })\r\n            }\r\n            return listaPost.map(item =>{\r\n                if(item.idTipoPostagem === 2){\r\n                    return(\r\n                        <Posts\r\n                            key={item.id}\r\n                            id={item.id}\r\n                            imagem={item.imagem}\r\n                            titulo={item.titulo}\r\n                            corpoTexto={item.descricao}\r\n                            atualizacao={item.dataPostagem}\r\n                            idCategoria={item.idCategoria}\r\n                        />\r\n                    )\r\n                }else{\r\n                    return null\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const adicionarFiltro = (idCategoria) => {\r\n        if(idCategoria === 0){\r\n            setFiltros([idCategoria])\r\n            return\r\n        }\r\n        let filtro = [...filtros]\r\n        \r\n        if(filtro.indexOf(0) === 0){\r\n            filtro.splice(0,1)\r\n        }\r\n\r\n        let indexFiltro = filtros.indexOf(idCategoria)\r\n        \r\n        if(indexFiltro === -1){\r\n            filtro.push(idCategoria)\r\n            setFiltros(filtro)\r\n        }else{\r\n                    \r\n            filtro.splice(indexFiltro, 1)\r\n            setFiltros(filtro)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Row\r\n                    style={{\r\n                        'margin': '20px 0 0 0'\r\n                    }}\r\n                >\r\n                    <Col md=\"auto\">\r\n                        <Filters\r\n                            adicionarFiltro={adicionarFiltro}\r\n                            filtros={filtros}\r\n                        />\r\n                    </Col>        \r\n                </Row>\r\n                <Row xs={1} md={4} lg={3}\r\n                    className=\"row\"\r\n                    style={{\r\n                        'marginBottom': '0'\r\n                    }}\r\n                >\r\n                    {postAnaliseMap()}\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PaginaAnalises","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaSobre\\PaginaSobre.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\contexts\\TemaContext.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaPerfil\\PaginaPerfil.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaNoticias\\PaginaNoticias.js",["252"],"import React,{useEffect, useState} from 'react'\r\n\r\nimport {Container, Row, Carousel, Col} from 'react-bootstrap'\r\n\r\nimport MyCarousel from '../../Conteudo/MyCarousel/MyCarousel'\r\nimport Posts from '../../Conteudo/Posts/Posts'\r\n\r\nimport getPostsInicio from '../../../utils/getPostsInicio'\r\nimport Filters from '../../Conteudo/Filters/Filters'\r\n\r\nconst PaginaNoticias = () => {\r\n    const [listaPostNoticias, setListaPostNoticias] = useState([])\r\n    const [listaCarrosselNoticias, setListaCarrosselNoticias] = useState([])\r\n    const [filtros, setFiltros] = useState([])\r\n\r\n    useEffect(async () => {\r\n        const post = await getPostsInicio()\r\n        setListaPostNoticias(post)\r\n        setListaCarrosselNoticias(post.slice(0,3))\r\n    },[])\r\n\r\n    const postNoticiasMap = () => {\r\n        if(listaPostNoticias.length > 0){\r\n            let listaPost = listaPostNoticias\r\n            if(filtros.length > 0 && filtros.indexOf(0) === -1){\r\n                listaPost = listaPost.filter(item => {\r\n                    return filtros.indexOf(item.idCategoria) > -1\r\n                })\r\n            }\r\n            return listaPost.map(item => {\r\n                if(item.idTipoPostagem === 1){\r\n                    return(\r\n                        <Posts \r\n                            id={item.id}\r\n                            imagem={item.imagem}\r\n                            titulo={item.titulo}\r\n                            corpoTexto={item.descricao}\r\n                            atualizacao={item.dataPostagem}\r\n                            idCategoria={item.idCategoria}\r\n                        />\r\n                    )\r\n                }else{\r\n                    return null\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const noticiasCarrosselMap = () => {\r\n        if(listaCarrosselNoticias.length > 0){\r\n            return listaCarrosselNoticias.map(item => {\r\n                return (\r\n                    <Carousel.Item \r\n                        interval={3000}\r\n                        key={item.id}\r\n                    >\r\n                        <MyCarousel\r\n                            imagem={item.imagem}\r\n                            titulo={item.titulo}\r\n                            texto={item.descricao}\r\n                        />\r\n                    </Carousel.Item>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    const adicionarFiltro = (idCategoria) => {\r\n        if(idCategoria === 0){\r\n            setFiltros([idCategoria])\r\n            return\r\n        }\r\n        let filtro = [...filtros]\r\n        \r\n        if(filtro.indexOf(0) === 0){\r\n            filtro.splice(0,1)\r\n        }\r\n\r\n        let indexFiltro = filtros.indexOf(idCategoria)\r\n        \r\n        if(indexFiltro === -1){\r\n            filtro.push(idCategoria)\r\n            setFiltros(filtro)\r\n        }else{\r\n                    \r\n            filtro.splice(indexFiltro, 1)\r\n            setFiltros(filtro)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Carousel>\r\n                {noticiasCarrosselMap()}\r\n            </Carousel>\r\n            \r\n            <Container>\r\n                <Row\r\n                    style={{\r\n                        'margin': '20px 0 0 0'\r\n                    }}\r\n                >\r\n                    <Col md=\"auto\">\r\n                        <Filters\r\n                            adicionarFiltro={adicionarFiltro}\r\n                            filtros={filtros}\r\n                        />\r\n                    </Col>        \r\n                </Row>\r\n                <Row xs={1} md={4} lg={3}\r\n                    className=\"row\"\r\n                    style={{\r\n                        'marginBottom': '0'\r\n                    }}\r\n                >\r\n                    {postNoticiasMap()}\r\n                </Row>        \r\n            </Container>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default PaginaNoticias","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\utils\\estilosTema.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\utils\\getCategorias.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Conteudo\\Header\\Header.js",["253"],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Conteudo\\Footer\\Footer.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\utils\\getInicioCarrossel.js",[],["254","255"],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\utils\\getPostsInicio.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\utils\\getNoticiasCarrossel.js",[],["256","257"],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Conteudo\\Posts\\Posts.js",["258","259"],"import React, {useContext, useEffect, useState} from 'react'\r\nimport './Posts.css'\r\n\r\nimport {Col, Card, Button} from 'react-bootstrap'\r\n\r\nimport TemaContext from '../../../contexts/TemaContext'\r\nimport removerPostServico from '../../../utils/removerPostServico'\r\nimport pegarCategoriaPeloId from '../../../utils/pegarCategoriaPeloId'\r\nimport formatarData from '../../../utils/formatarData'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CardPost = ({postagem, texto, atualizacao, imagem, idCategoria, PostId, idTipoPostagem}) => {\r\n\r\n    const [postRemovido, setpostRemovido] = useState(false)\r\n    const [nomeCategoria, setNomeCategoria] = useState('')\r\n\r\n    useEffect(async ()=>{\r\n        const categoria = await pegarCategoriaPeloId(idCategoria)\r\n        setNomeCategoria(categoria ? categoria.descricao : null)\r\n    },[])\r\n\r\n    const tema = useContext(TemaContext)\r\n\r\n    const removerPost = async () => {\r\n        \r\n        const resultado = await removerPostServico(PostId)\r\n\r\n        if(resultado.sucesso){\r\n            setpostRemovido(true)\r\n            alert(resultado.mensagem)\r\n            return false\r\n        }\r\n        alert(resultado.mensagem)\r\n        setpostRemovido(false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        { postRemovido ? null :\r\n            <Col className=\"col\">       \r\n                <Button \r\n                    onClick={ () => removerPost() }\r\n                    variant=\"danger\"\r\n                    size=\"sm\"\r\n                    style={{\r\n                        position: 'absolute',\r\n                        top: '10px',\r\n                        right: '24px',\r\n                        zIndex: '3'\r\n                    }}\r\n                >X</Button>\r\n\r\n                <Card className=\"p-2\" bg={tema.objVariant} text={tema.objFontVariant}>\r\n                    <Card.Img \r\n                        variant= \"top\"\r\n                        alt=\"img\"\r\n                        src={imagem}\r\n                    />\r\n                    <Card.Body>\r\n                        <Card.Title>{idTipoPostagem === 1 ? \"NOTÍCIA\" : \"ANÁLISE\"}: {postagem}</Card.Title>\r\n                        <Card.Text>\r\n                            {nomeCategoria}\r\n                        </Card.Text>\r\n                        <Card.Text>\r\n                            {texto.slice(0,168)}...\r\n                        </Card.Text>\r\n                                <Link to={`/pagina-post/${PostId}`}>\r\n                                    <Button variant={tema.botaoVariant}>Leia Mais</Button>\r\n                                </Link>\r\n                                \r\n                        \r\n                    </Card.Body>\r\n                    \r\n                    <Card.Footer>\r\n                        <small className=\"text-muted\">\r\n                            {atualizacao ? formatarData(atualizacao): null}\r\n                        </small>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </Col>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst Posts = ({titulo, corpoTexto, atualizacao, imagem, id, idCategoria, idTipoPostagem}) => {\r\n    return (\r\n        <>      \r\n            <CardPost\r\n                imagem={imagem}\r\n                postagem={titulo}\r\n                texto={corpoTexto}\r\n                atualizacao={atualizacao}\r\n                PostId={id}\r\n                idCategoria={idCategoria}\r\n                idTipoPostagem={idTipoPostagem}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Posts","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Conteudo\\MyCarousel\\MyCarousel.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Conteudo\\SubMenu\\SubMenu.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Conteudo\\Login\\Login.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaLogin\\PaginaLogin.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Conteudo\\Filters\\Filters.js",["260"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { Button, ButtonGroup } from 'react-bootstrap'\r\n\r\nimport getCategorias from '../../../utils/getCategorias'\r\n\r\nimport TemaContext from '../../../contexts/TemaContext'\r\n\r\nconst Filters = ({adicionarFiltro, filtros}) => {\r\n\r\n    const [btnCategorias, setBtnCategorias] = useState([])\r\n    const tema = useContext(TemaContext)\r\n\r\n    useEffect( async () => {\r\n        const categorias = await getCategorias()\r\n        setBtnCategorias(categorias)\r\n    }, [])\r\n\r\n    const btnCategoriasMap = () => {\r\n        if(btnCategorias.length > 0){\r\n            return btnCategorias.map(item => {\r\n                return(\r\n                    <div key={item.id}>\r\n                        <Button \r\n                            variant={filtros.indexOf(item.id) === -1? tema.botaoVariant : tema.botaoSelecionado}\r\n                            onClick={() => {adicionarFiltro(item.id)}}\r\n                        >{item.descricao}</Button>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ButtonGroup className=\"mb-2\">\r\n            <Button variant={filtros.indexOf(0) === -1? tema.botaoVariant : tema.botaoSelecionado}\r\n                onClick={() => {adicionarFiltro(0)}}\r\n            >Todos</Button>\r\n            {btnCategoriasMap()}\r\n        </ButtonGroup>\r\n    )\r\n}\r\n\r\nexport default Filters","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaPost\\PaginaPost.js",["261","262","263"],"import React,  {useEffect, useState} from 'react'\r\n\r\nimport { useParams } from 'react-router-dom'\r\nimport getDetalhesPost from '../../../utils/getDetalhesPost'\r\nimport formatarData from '../../../utils/formatarData'\r\n\r\nimport pegarCategoriaPeloId from '../../../utils/pegarCategoriaPeloId'\r\n\r\nconst PaginaPost = () => {\r\n\r\n    const { id } = useParams()\r\n\r\n    const [postCarregado, setPostCarregado] = useState([])\r\n    const [nomeCategoria, setNomeCategoria] = useState('')\r\n\r\n    useEffect(async () => {\r\n        const _postCarregado = await getDetalhesPost(id)\r\n        setPostCarregado( _postCarregado )\r\n\r\n        const _categoria = await pegarCategoriaPeloId( _postCarregado.idCategoria )\r\n        setNomeCategoria(_categoria ? _categoria.descricao : null)\r\n    },[])\r\n\r\n    if(postCarregado){\r\n        return (\r\n            <>\r\n            <h3>{postCarregado.id}-{postCarregado.idTipoPostagem === 1 ? \"NOTÍCIA\" : \"ANÁLISE\"}: {postCarregado.titulo}</h3>\r\n            <h5>\r\n                {nomeCategoria} - {formatarData(postCarregado.dataPostagem)} -\r\n                Autor: {postCarregado.autor ? postCarregado.autor : \"Gabriel\"}\r\n            </h5>\r\n            {postCarregado.imagem ? \r\n                postCarregado.imagem.includes('http') ? <img src={postCarregado.imagem}/>\r\n                : null\r\n            : null\r\n            }\r\n            \r\n            <p>{postCarregado.descricao}</p>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <p>Carregando...</p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PaginaPost","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\config\\http.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaNovoPost\\PaginaNovoPost.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\utils\\salvarNovoPost.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\utils\\removerPostServico.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaNovaCategoria\\PaginaNovaCategoria.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\utils\\salvarNovaCategoria.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\utils\\removerCategoriaServico.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\utils\\getDetalhesPost.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\utils\\formatarData.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\utils\\pegarCategoriaPeloId.js",[],{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","replacedBy":"267"},{"ruleId":"264","replacedBy":"268"},{"ruleId":"266","replacedBy":"269"},{"ruleId":"270","severity":1,"message":"271","line":11,"column":8,"nodeType":"272","messageId":"273","endLine":11,"endColumn":19},{"ruleId":"274","severity":1,"message":"275","line":17,"column":15,"nodeType":"276","endLine":21,"endColumn":6},{"ruleId":"274","severity":1,"message":"275","line":14,"column":15,"nodeType":"276","endLine":17,"endColumn":6},{"ruleId":"274","severity":1,"message":"275","line":16,"column":15,"nodeType":"276","endLine":20,"endColumn":6},{"ruleId":"270","severity":1,"message":"277","line":3,"column":62,"nodeType":"272","messageId":"273","endLine":3,"endColumn":67},{"ruleId":"264","replacedBy":"278"},{"ruleId":"266","replacedBy":"279"},{"ruleId":"264","replacedBy":"280"},{"ruleId":"266","replacedBy":"281"},{"ruleId":"274","severity":1,"message":"275","line":17,"column":15,"nodeType":"276","endLine":20,"endColumn":6},{"ruleId":"274","severity":1,"message":"282","line":20,"column":7,"nodeType":"283","endLine":20,"endColumn":9,"suggestions":"284"},{"ruleId":"274","severity":1,"message":"275","line":13,"column":16,"nodeType":"276","endLine":16,"endColumn":6},{"ruleId":"274","severity":1,"message":"275","line":16,"column":15,"nodeType":"276","endLine":22,"endColumn":6},{"ruleId":"274","severity":1,"message":"285","line":22,"column":7,"nodeType":"283","endLine":22,"endColumn":9,"suggestions":"286"},{"ruleId":"287","severity":1,"message":"288","line":33,"column":57,"nodeType":"289","endLine":33,"endColumn":90},"no-native-reassign",["290"],"no-negated-in-lhs",["291"],["290"],["291"],"no-unused-vars","'PaginaSobre' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'Image' is defined but never used.",["290"],["291"],["290"],["291"],"React Hook useEffect has a missing dependency: 'idCategoria'. Either include it or remove the dependency array.","ArrayExpression",["292"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["293"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},"Update the dependencies array to be: [idCategoria]",{"range":"298","text":"299"},"Update the dependencies array to be: [id]",{"range":"300","text":"301"},[827,829],"[idCategoria]",[771,773],"[id]"]