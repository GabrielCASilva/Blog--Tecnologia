[{"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\index.js":"1","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\reportWebVitals.js":"2","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\App.js":"3","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Pages\\PaginaRotas\\PaginaRotas.js":"4","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Pages\\PaginaInicial\\PaginaInicial.js":"5","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Conteudo\\Header\\Header.js":"6","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Conteudo\\MyCarousel\\MyCarousel.js":"7","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Conteudo\\Posts\\Posts.js":"8","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Pages\\PaginaCategorias\\PaginaCategorias.js":"9","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Pages\\PaginaAnalises\\PaginaAnalises.js":"10","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Pages\\PaginaNoticias\\PaginaNoticias.js":"11","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Pages\\PaginaSobre\\PaginaSobre.js":"12","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Pages\\PaginaPerfil\\PaginaPerfil.js":"13","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\contexts\\TemaContext.js":"14","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\utils\\estilosTema.js":"15","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\utils\\getCategorias.js":"16","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Conteudo\\SubMenu\\SubMenu.js":"17","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\utils\\getPostsAnalises.js":"18","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\utils\\getPostsInicio.js":"19","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\utils\\getPostsNoticias.js":"20","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\utils\\getInicioCarrossel.js":"21","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\utils\\getNoticiasCarrossel.js":"22","D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Conteudo\\Footer\\Footer.js":"23","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\index.js":"24","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\reportWebVitals.js":"25","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\App.js":"26","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaRotas\\PaginaRotas.js":"27","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaCategorias\\PaginaCategorias.js":"28","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaInicial\\PaginaInicial.js":"29","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaAnalises\\PaginaAnalises.js":"30","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaSobre\\PaginaSobre.js":"31","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\contexts\\TemaContext.js":"32","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaPerfil\\PaginaPerfil.js":"33","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaNoticias\\PaginaNoticias.js":"34","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\utils\\estilosTema.js":"35","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\utils\\getCategorias.js":"36","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Conteudo\\Header\\Header.js":"37","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Conteudo\\Footer\\Footer.js":"38","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\utils\\getInicioCarrossel.js":"39","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\utils\\getPostsInicio.js":"40","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\utils\\getNoticiasCarrossel.js":"41","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Conteudo\\Posts\\Posts.js":"42","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Conteudo\\MyCarousel\\MyCarousel.js":"43","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Conteudo\\SubMenu\\SubMenu.js":"44","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Conteudo\\Login\\Login.js":"45","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaLogin\\PaginaLogin.js":"46","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Conteudo\\Filters\\Filters.js":"47","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaPost\\PaginaPost.js":"48","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\config\\http.js":"49","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaNovoPost\\PaginaNovoPost.js":"50","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\utils\\salvarNovoPost.js":"51"},{"size":265,"mtime":1622900773677,"results":"52","hashOfConfig":"53"},{"size":362,"mtime":1619483562581,"results":"54","hashOfConfig":"53"},{"size":204,"mtime":1622903843466,"results":"55","hashOfConfig":"53"},{"size":2921,"mtime":1622948882556,"results":"56","hashOfConfig":"53"},{"size":2126,"mtime":1623088271484,"results":"57","hashOfConfig":"53"},{"size":3927,"mtime":1622950008164,"results":"58","hashOfConfig":"53"},{"size":522,"mtime":1623087860567,"results":"59","hashOfConfig":"53"},{"size":1572,"mtime":1623086127547,"results":"60","hashOfConfig":"53"},{"size":1377,"mtime":1622949627826,"results":"61","hashOfConfig":"53"},{"size":1269,"mtime":1623084628917,"results":"62","hashOfConfig":"53"},{"size":2213,"mtime":1623088376241,"results":"63","hashOfConfig":"53"},{"size":143,"mtime":1622926334335,"results":"64","hashOfConfig":"53"},{"size":145,"mtime":1622926366377,"results":"65","hashOfConfig":"53"},{"size":100,"mtime":1622929738076,"results":"66","hashOfConfig":"53"},{"size":578,"mtime":1622934045709,"results":"67","hashOfConfig":"53"},{"size":394,"mtime":1622948636004,"results":"68","hashOfConfig":"53"},{"size":511,"mtime":1623082802853,"results":"69","hashOfConfig":"53"},{"size":2633,"mtime":1623084572949,"results":"70","hashOfConfig":"53"},{"size":2625,"mtime":1623085470920,"results":"71","hashOfConfig":"53"},{"size":2633,"mtime":1623085750110,"results":"72","hashOfConfig":"53"},{"size":808,"mtime":1623087438135,"results":"73","hashOfConfig":"53"},{"size":816,"mtime":1623087091834,"results":"74","hashOfConfig":"53"},{"size":556,"mtime":1622933820259,"results":"75","hashOfConfig":"53"},{"size":265,"mtime":1622900773677,"results":"76","hashOfConfig":"77"},{"size":362,"mtime":1619483562581,"results":"78","hashOfConfig":"77"},{"size":204,"mtime":1622903843466,"results":"79","hashOfConfig":"77"},{"size":3675,"mtime":1624736410490,"results":"80","hashOfConfig":"77"},{"size":1377,"mtime":1623718491939,"results":"81","hashOfConfig":"77"},{"size":3681,"mtime":1624669826613,"results":"82","hashOfConfig":"77"},{"size":2972,"mtime":1624715040371,"results":"83","hashOfConfig":"77"},{"size":143,"mtime":1622926334335,"results":"84","hashOfConfig":"77"},{"size":100,"mtime":1622929738076,"results":"85","hashOfConfig":"77"},{"size":137,"mtime":1623190959696,"results":"86","hashOfConfig":"77"},{"size":3963,"mtime":1624715035792,"results":"87","hashOfConfig":"77"},{"size":748,"mtime":1623459220946,"results":"88","hashOfConfig":"77"},{"size":367,"mtime":1624667910042,"results":"89","hashOfConfig":"77"},{"size":4007,"mtime":1623459479071,"results":"90","hashOfConfig":"77"},{"size":556,"mtime":1622933820259,"results":"91","hashOfConfig":"77"},{"size":808,"mtime":1623619211024,"results":"92","hashOfConfig":"77"},{"size":226,"mtime":1624668369209,"results":"93","hashOfConfig":"77"},{"size":816,"mtime":1623087091834,"results":"94","hashOfConfig":"77"},{"size":1773,"mtime":1623285894977,"results":"95","hashOfConfig":"77"},{"size":522,"mtime":1623087860567,"results":"96","hashOfConfig":"77"},{"size":635,"mtime":1624715060563,"results":"97","hashOfConfig":"77"},{"size":1849,"mtime":1623181222176,"results":"98","hashOfConfig":"77"},{"size":265,"mtime":1623200308409,"results":"99","hashOfConfig":"77"},{"size":1404,"mtime":1624667868855,"results":"100","hashOfConfig":"77"},{"size":292,"mtime":1623285210424,"results":"101","hashOfConfig":"77"},{"size":104,"mtime":1624667568013,"results":"102","hashOfConfig":"77"},{"size":4214,"mtime":1624737303309,"results":"103","hashOfConfig":"77"},{"size":336,"mtime":1624737712290,"results":"104","hashOfConfig":"77"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},"1jxon0l",{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},"e9t3g2",{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"154"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"154"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\index.js",[],["215","216"],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\reportWebVitals.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\App.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Pages\\PaginaRotas\\PaginaRotas.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Pages\\PaginaInicial\\PaginaInicial.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Conteudo\\Header\\Header.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Conteudo\\MyCarousel\\MyCarousel.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Conteudo\\Posts\\Posts.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Pages\\PaginaCategorias\\PaginaCategorias.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Pages\\PaginaAnalises\\PaginaAnalises.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Pages\\PaginaNoticias\\PaginaNoticias.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Pages\\PaginaSobre\\PaginaSobre.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Pages\\PaginaPerfil\\PaginaPerfil.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\contexts\\TemaContext.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\utils\\estilosTema.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\utils\\getCategorias.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Conteudo\\SubMenu\\SubMenu.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\utils\\getPostsAnalises.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\utils\\getPostsInicio.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\utils\\getPostsNoticias.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\utils\\getInicioCarrossel.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\utils\\getNoticiasCarrossel.js",[],"D:\\INFNET-2\\blog-tecnologia-projeto\\src\\Components\\Conteudo\\Footer\\Footer.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\index.js",[],["217","218"],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\reportWebVitals.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\App.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaRotas\\PaginaRotas.js",["219"],"import React, {useEffect, useState} from 'react'\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'\r\n\r\nimport Header from '../../Conteudo/Header/Header'\r\nimport Footer from '../../Conteudo/Footer/Footer'\r\n\r\nimport PaginaInicial from '../PaginaInicial/PaginaInicial'\r\nimport PaginaCategorias from '../PaginaCategorias/PaginaCategorias'\r\nimport PaginaAnalises from '../PaginaAnalises/PaginaAnalises'\r\nimport PaginaNoticias from '../PaginaNoticias/PaginaNoticias'\r\nimport PaginaSobre from '../PaginaSobre/PaginaSobre'\r\nimport PaginaPerfil from '../PaginaPerfil/PaginaPerfil'\r\nimport PaginaNovoPost from '../PaginaNovoPost/PaginaNovoPost'\r\n\r\nimport TemaContext from '../../../contexts/TemaContext'\r\n\r\nimport{\r\n    TEMA_CLARO,\r\n    TEMA_ESCURO,\r\n    TEMA_CLARO_CONFIG,\r\n    TEMA_ESCURO_CONFIG\r\n} from '../../../utils/estilosTema'\r\n\r\nimport getCategorias from '../../../utils/getCategorias'\r\nimport PaginaLogin from '../PaginaLogin/PaginaLogin'\r\nimport PaginaPost from '../PaginaPost/PaginaPost'\r\n\r\nconst PaginaRotas = () => {\r\n\r\n    const [tema, setTema] = useState(TEMA_CLARO_CONFIG)\r\n    const [categorias, setCategorias] = useState([])\r\n\r\n    useEffect( async () => {\r\n        const categoria = await getCategorias()\r\n        setCategorias(categoria)\r\n    },[])\r\n\r\n    const modificarTema = temaSelecionado => {\r\n\r\n        switch( temaSelecionado ){\r\n            case TEMA_CLARO:\r\n                setTema(TEMA_CLARO_CONFIG)\r\n                break\r\n            \r\n            case TEMA_ESCURO:\r\n                setTema(TEMA_ESCURO_CONFIG)\r\n                break\r\n\r\n            default:\r\n                setTema(TEMA_CLARO_CONFIG)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <TemaContext.Provider value={ tema }>\r\n\r\n            <BrowserRouter>\r\n                <div style={{'backgroundColor': tema.corFundoTema, 'minHeight': '94.6vh'}}>\r\n                    <Header funcaoConfiguraTema={ modificarTema }/>\r\n                    \r\n                    <Switch>\r\n                        <Route exact path=\"/\">\r\n                            <Redirect to=\"/inicio\"/>\r\n                        </Route>\r\n\r\n                        <Route path=\"/inicio\">\r\n                            <PaginaInicial/>\r\n                        </Route>\r\n\r\n                        <Route path=\"/analises\">\r\n                            <PaginaAnalises/>\r\n                        </Route>\r\n\r\n                        <Route path=\"/noticias\">\r\n                            <PaginaNoticias/>\r\n                        </Route>\r\n                        \r\n                        <Route path=\"/categorias\">\r\n                            <PaginaCategorias lista={categorias}/>\r\n                        </Route>\r\n                        \r\n                        <Route path=\"/sobre\">\r\n                            <PaginaSobre/>\r\n                        </Route>\r\n\r\n                        <Route path=\"/perfil\">\r\n                            <PaginaPerfil/>\r\n                        </Route>\r\n\r\n                        <Route path=\"/admin\">\r\n                            <PaginaLogin/>\r\n                        </Route>\r\n\r\n                        <Route path=\"/pagina-post/:id\">\r\n                            <PaginaPost/>\r\n                        </Route>\r\n\r\n                        <Route path={`/novo-post/:criacao`}>\r\n                            <PaginaNovoPost\r\n                                categorias={categorias}\r\n                            />\r\n                        </Route>\r\n\r\n                    </Switch>\r\n\r\n                    \r\n                </div>\r\n                <Footer/>\r\n            </BrowserRouter>\r\n\r\n        </TemaContext.Provider>\r\n    )\r\n}\r\n\r\nexport default PaginaRotas","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaCategorias\\PaginaCategorias.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaInicial\\PaginaInicial.js",["220"],"import React,{useState, useEffect} from 'react'\r\n\r\nimport {Container, Row, Carousel, Col} from 'react-bootstrap'\r\n\r\nimport MyCarousel from '../../Conteudo/MyCarousel/MyCarousel'\r\nimport Posts from '../../Conteudo/Posts/Posts'\r\n\r\nimport getPostsInicio from '../../../utils/getPostsInicio'\r\nimport getInicioCarrossel from '../../../utils/getInicioCarrossel'\r\nimport Filters from '../../Conteudo/Filters/Filters'\r\n\r\nconst PaginaInicial = () => {\r\n    const [listaPostInicio, setListaPostInicio] = useState([])\r\n    const [listaCarrosselInicio, setListaCarrosselInicio] = useState([])\r\n    const [filtros, setFiltros] = useState([])\r\n\r\n    useEffect(async() => {\r\n        const posts = await getPostsInicio()\r\n        setListaPostInicio(posts)\r\n        getInicioCarrossel(setListaCarrosselInicio)\r\n    },[])\r\n\r\n    const postInicioMap = () => {\r\n        if(listaPostInicio.length > 0){\r\n            let listaPost = listaPostInicio\r\n            if(filtros.length > 0 && filtros.indexOf(0) === -1){\r\n                listaPost = listaPost.filter(item => {\r\n                    return filtros.indexOf(item.idCategoria) > -1\r\n                })\r\n            }\r\n            return listaPost.map(item => {\r\n                return (\r\n                    <Posts\r\n                        key={item.id}\r\n                        id={item.id}\r\n                        imagem={item.imagem}\r\n                        titulo={item.titulo}\r\n                        corpoTexto={item.descricao}\r\n                        atualizacao={item.dataPostagem}\r\n                    />\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    const inicioCarrosselMap = () => {\r\n        if(listaCarrosselInicio.length > 0){\r\n            return listaCarrosselInicio.map(item => {\r\n                return (\r\n                    <Carousel.Item interval={3000}\r\n                        key={item.id}\r\n                    >\r\n                        <MyCarousel\r\n                            imagem={item.imagem}\r\n                            titulo={item.titulo}\r\n                            texto={item.texto}\r\n                        />\r\n                    </Carousel.Item>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    const adicionarFiltro = (idCategoria) => {\r\n        if(idCategoria === 0){\r\n            setFiltros([idCategoria])\r\n            return\r\n        }\r\n        let filtro = [...filtros]\r\n        \r\n        if(filtro.indexOf(0) === 0){\r\n            filtro.splice(0,1)\r\n        }\r\n\r\n        let indexFiltro = filtros.indexOf(idCategoria)\r\n        \r\n        if(indexFiltro === -1){\r\n            filtro.push(idCategoria)\r\n            setFiltros(filtro)\r\n        }else{\r\n                    \r\n            filtro.splice(indexFiltro, 1)\r\n            setFiltros(filtro)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Carousel>\r\n                {inicioCarrosselMap()}\r\n            </Carousel>\r\n            <Container>\r\n                <Row\r\n                    style={{\r\n                        'margin': '20px 0 0 0'\r\n                    }}\r\n                >\r\n                    <Col md=\"auto\">\r\n                        <Filters\r\n                            adicionarFiltro={adicionarFiltro}\r\n                            filtros={filtros}\r\n                        />\r\n                    </Col>        \r\n                </Row>\r\n                <Row xs={1} md={4} lg={3}\r\n                    className=\"row\"\r\n                    style={{\r\n                        'marginBottom': '0'\r\n                    }}\r\n                >\r\n                    {postInicioMap()}\r\n                </Row>\r\n            </Container>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default PaginaInicial","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaAnalises\\PaginaAnalises.js",["221"],"import React,{useState, useEffect} from 'react'\r\n\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\n\r\nimport SubMenu from '../../Conteudo/SubMenu/SubMenu'\r\nimport Posts from '../../Conteudo/Posts/Posts'\r\n\r\nimport getPostsInicio from '../../../utils/getPostsInicio'\r\nimport Filters from '../../Conteudo/Filters/Filters'\r\n\r\nconst PaginaAnalises = () => {\r\n    const [listaPostAnalise, setListaPostAnalise] = useState([])\r\n    const [filtros, setFiltros] = useState([])\r\n\r\n    useEffect(async () => {\r\n        const post = await getPostsInicio()\r\n        setListaPostAnalise(post)\r\n    }, [])\r\n\r\n    const postAnaliseMap = () => {\r\n        if(listaPostAnalise.length > 0){\r\n            let listaPost = listaPostAnalise\r\n            if(filtros.length > 0 && filtros.indexOf(0) === -1){\r\n                listaPost = listaPost.filter(item => {\r\n                    return filtros.indexOf(item.idCategoria) > -1\r\n                })\r\n            }\r\n            return listaPost.map(item =>{\r\n                if(item.idTipoPostagem === 2){\r\n                    return(\r\n                        <Posts\r\n                            key={item.id}\r\n                            id={item.id}\r\n                            imagem={item.imagem}\r\n                            titulo={item.titulo}\r\n                            corpoTexto={item.descricao}\r\n                            atualizacao={item.dataPostagem}\r\n                        />\r\n                    )\r\n                }else{\r\n                    return null\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const adicionarFiltro = (idCategoria) => {\r\n        if(idCategoria === 0){\r\n            setFiltros([idCategoria])\r\n            return\r\n        }\r\n        let filtro = [...filtros]\r\n        \r\n        if(filtro.indexOf(0) === 0){\r\n            filtro.splice(0,1)\r\n        }\r\n\r\n        let indexFiltro = filtros.indexOf(idCategoria)\r\n        \r\n        if(indexFiltro === -1){\r\n            filtro.push(idCategoria)\r\n            setFiltros(filtro)\r\n        }else{\r\n                    \r\n            filtro.splice(indexFiltro, 1)\r\n            setFiltros(filtro)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <SubMenu/>\r\n            <Container>\r\n                <Row\r\n                    style={{\r\n                        'margin': '20px 0 0 0'\r\n                    }}\r\n                >\r\n                    <Col md=\"auto\">\r\n                        <Filters\r\n                            adicionarFiltro={adicionarFiltro}\r\n                            filtros={filtros}\r\n                        />\r\n                    </Col>        \r\n                </Row>\r\n                <Row xs={1} md={4} lg={3}\r\n                    className=\"row\"\r\n                    style={{\r\n                        'marginBottom': '0'\r\n                    }}\r\n                >\r\n                    {postAnaliseMap()}\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PaginaAnalises","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaSobre\\PaginaSobre.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\contexts\\TemaContext.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaPerfil\\PaginaPerfil.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaNoticias\\PaginaNoticias.js",["222"],"import React,{useEffect, useState} from 'react'\r\n\r\nimport {Container, Row, Carousel, Col} from 'react-bootstrap'\r\n\r\nimport MyCarousel from '../../Conteudo/MyCarousel/MyCarousel'\r\nimport Posts from '../../Conteudo/Posts/Posts'\r\nimport SubMenu from '../../Conteudo/SubMenu/SubMenu'\r\n\r\nimport getPostsInicio from '../../../utils/getPostsInicio'\r\nimport getNoticiasCarrossel from '../../../utils/getNoticiasCarrossel'\r\nimport Filters from '../../Conteudo/Filters/Filters'\r\n\r\nconst PaginaNoticias = () => {\r\n    const [listaPostNoticias, setListaPostNoticias] = useState([])\r\n    const [listaCarrosselNoticias, setListaCarrosselNoticias] = useState([])\r\n    const [filtros, setFiltros] = useState([])\r\n\r\n    useEffect(async () => {\r\n        const post = await getPostsInicio()\r\n        setListaPostNoticias(post)\r\n        getNoticiasCarrossel(setListaCarrosselNoticias)\r\n    },[])\r\n\r\n    const postNoticiasMap = () => {\r\n        if(listaPostNoticias.length > 0){\r\n            let listaPost = listaPostNoticias\r\n            if(filtros.length > 0 && filtros.indexOf(0) === -1){\r\n                listaPost = listaPost.filter(item => {\r\n                    return filtros.indexOf(item.idCategoria) > -1\r\n                })\r\n            }\r\n            return listaPost.map(item => {\r\n                if(item.idTipoPostagem === 1){\r\n                    return(\r\n                        <Posts \r\n                            id={item.id}\r\n                            imagem={item.imagem}\r\n                            titulo={item.titulo}\r\n                            corpoTexto={item.descricao}\r\n                            atualizacao={item.dataPostagem}\r\n                        />\r\n                    )\r\n                }else{\r\n                    return null\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const noticiasCarrosselMap = () => {\r\n        if(listaCarrosselNoticias.length > 0){\r\n            return listaCarrosselNoticias.map(item => {\r\n                return (\r\n                    <Carousel.Item \r\n                        interval={3000}\r\n                        key={item.id}\r\n                    >\r\n                        <MyCarousel\r\n                            imagem={item.imagem}\r\n                            titulo={item.titulo}\r\n                            texto={item.texto}\r\n                        />\r\n                    </Carousel.Item>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    const adicionarFiltro = (idCategoria) => {\r\n        if(idCategoria === 0){\r\n            setFiltros([idCategoria])\r\n            return\r\n        }\r\n        let filtro = [...filtros]\r\n        \r\n        if(filtro.indexOf(0) === 0){\r\n            filtro.splice(0,1)\r\n        }\r\n\r\n        let indexFiltro = filtros.indexOf(idCategoria)\r\n        \r\n        if(indexFiltro === -1){\r\n            filtro.push(idCategoria)\r\n            setFiltros(filtro)\r\n        }else{\r\n                    \r\n            filtro.splice(indexFiltro, 1)\r\n            setFiltros(filtro)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <SubMenu/>\r\n            <Carousel>\r\n                {noticiasCarrosselMap()}\r\n            </Carousel>\r\n            \r\n            <Container>\r\n                <Row\r\n                    style={{\r\n                        'margin': '20px 0 0 0'\r\n                    }}\r\n                >\r\n                    <Col md=\"auto\">\r\n                        <Filters\r\n                            adicionarFiltro={adicionarFiltro}\r\n                            filtros={filtros}\r\n                        />\r\n                    </Col>        \r\n                </Row>\r\n                <Row xs={1} md={4} lg={3}\r\n                    className=\"row\"\r\n                    style={{\r\n                        'marginBottom': '0'\r\n                    }}\r\n                >\r\n                    {postNoticiasMap()}\r\n                </Row>        \r\n            </Container>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default PaginaNoticias","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\utils\\estilosTema.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\utils\\getCategorias.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Conteudo\\Header\\Header.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Conteudo\\Footer\\Footer.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\utils\\getInicioCarrossel.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\utils\\getPostsInicio.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\utils\\getNoticiasCarrossel.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Conteudo\\Posts\\Posts.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Conteudo\\MyCarousel\\MyCarousel.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Conteudo\\SubMenu\\SubMenu.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Conteudo\\Login\\Login.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaLogin\\PaginaLogin.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Conteudo\\Filters\\Filters.js",["223"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { Button, ButtonGroup } from 'react-bootstrap'\r\n\r\nimport getCategorias from '../../../utils/getCategorias'\r\n\r\nimport TemaContext from '../../../contexts/TemaContext'\r\n\r\nconst Filters = ({adicionarFiltro, filtros}) => {\r\n\r\n    const [btnCategorias, setBtnCategorias] = useState([])\r\n    const tema = useContext(TemaContext)\r\n\r\n    useEffect( async () => {\r\n        const categorias = await getCategorias()\r\n        setBtnCategorias(categorias)\r\n    }, [])\r\n\r\n    const btnCategoriasMap = () => {\r\n        if(btnCategorias.length > 0){\r\n            return btnCategorias.map(item => {\r\n                return(\r\n                    <div key={item.id}>\r\n                        <Button \r\n                            variant={filtros.indexOf(item.id) === -1? tema.botaoVariant : tema.botaoSelecionado}\r\n                            onClick={() => {adicionarFiltro(item.id)}}\r\n                        >{item.descricao}</Button>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ButtonGroup className=\"mb-2\">\r\n            <Button variant={filtros.indexOf(0) === -1? tema.botaoVariant : tema.botaoSelecionado}\r\n                onClick={() => {adicionarFiltro(0)}}\r\n            >Todos</Button>\r\n            {btnCategoriasMap()}\r\n        </ButtonGroup>\r\n    )\r\n}\r\n\r\nexport default Filters","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaPost\\PaginaPost.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\config\\http.js",[],"D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\Components\\Pages\\PaginaNovoPost\\PaginaNovoPost.js",["224","225"],"import React, {useState} from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Form, Button, Col, Row } from 'react-bootstrap'\r\nimport salvarNovoPost from '../../../utils/salvarNovoPost'\r\n\r\nimport './PaginaNovoPost.css'\r\n\r\nconst PaginaNovoPost = ({categorias}) => {\r\n\r\n    const [titulo, setTitulo] = useState('')\r\n    const [categoria, setCategoria] = useState(-1)\r\n    const [imagem, setImagem] = useState('')\r\n    const [descricao, setDescricao] = useState('')\r\n\r\n    const {criacao} = useParams()\r\n\r\n    const incluirNovoPost = (e) => {\r\n\r\n        //console.log('Form \\'submitado\\' ')\r\n\r\n        e.preventDefault()\r\n\r\n        if(\r\n            !imagem ||\r\n            !titulo ||\r\n            !descricao ||\r\n            !categoria\r\n        ){\r\n            alert('Por gentileza, preencha todos os campos.')\r\n            return false\r\n        }\r\n\r\n        const hoje = new Date()\r\n\r\n        const ano = hoje.getFullYear()\r\n        const mes = hoje.getMonth()\r\n        const dia = hoje.getDate()\r\n\r\n        const mesFormatado = (mes + 1) < 10 ? \"0\" + String((mes + 1)) : (mes + 1)\r\n\r\n        const novoPost = {\r\n            'imagem': imagem,\r\n            'titulo': titulo,\r\n            'descricao': descricao,\r\n            'idCategoria': categoria,\r\n            'dataPostagem': `${ano}-${mesFormatado}-${dia}`\r\n        }\r\n\r\n        salvarNovoPost(novoPost)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            \r\n            <Form onSubmit={ (e) => incluirNovoPost(e)}>\r\n                <Form.Group as={Col}>\r\n                    <h2>Novo Post</h2>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                    <Form.Label htmlFor='np-campo-titulo'>Titulo</Form.Label>\r\n                    <Form.Control\r\n                        id='np-campo-titulo'\r\n                        name='np-campo-titulo'\r\n                        value={titulo}\r\n                        onChange={e => setTitulo(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                    <Form.Label\r\n                        htmlFor='np-campo-categoria'\r\n                    >Categoria</Form.Label>\r\n                    <Form.Control \r\n                        as=\"select\"\r\n                        defaultValue=\"Selecione uma categoria\"\r\n                        id='np-campo-categoria'\r\n                        name='np-campo-categoria'\r\n                        value={categoria}\r\n                        onChange={e => setCategoria(e.target.value)}\r\n                    >\r\n                        \r\n                        <option  value={ -1} disabled >Selecione uma categoria</option>\r\n\r\n                        {categorias.map( item => {\r\n                            return (\r\n                            <option value={item.id} key={item.id}>\r\n                                {item.descricao}\r\n                            </option>\r\n                            )\r\n                        })}\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                    <Form.Label htmlFor='np-campo-imagem'>Imagem</Form.Label>\r\n                    <Form.Control\r\n                        id='np-campo-imagem'\r\n                        name='np-campo-imagem'\r\n                        value={imagem}\r\n                        onChange={e => setImagem(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                    <Form.Label htmlFor='np-campo-descricao'>Descricao</Form.Label>\r\n                    <Form.Control \r\n                        as=\"textarea\"\r\n                        id='np-campo-descricao'\r\n                        name='np-campo-descricao'\r\n                        value={descricao}\r\n                        onChange={e => setDescricao(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col}>\r\n                    <Button\r\n                        type=\"submit\" \r\n                        className=\"my-1\"\r\n                    >Salvar</Button>\r\n                </Form.Group>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PaginaNovoPost","D:\\Projetos-GitHub\\Blog--Tecnologia\\src\\utils\\salvarNovoPost.js",[],{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","replacedBy":"229"},{"ruleId":"226","replacedBy":"230"},{"ruleId":"228","replacedBy":"231"},{"ruleId":"232","severity":1,"message":"233","line":33,"column":16,"nodeType":"234","endLine":36,"endColumn":6},{"ruleId":"232","severity":1,"message":"233","line":17,"column":15,"nodeType":"234","endLine":21,"endColumn":6},{"ruleId":"232","severity":1,"message":"233","line":15,"column":15,"nodeType":"234","endLine":18,"endColumn":6},{"ruleId":"232","severity":1,"message":"233","line":18,"column":15,"nodeType":"234","endLine":22,"endColumn":6},{"ruleId":"232","severity":1,"message":"233","line":13,"column":16,"nodeType":"234","endLine":16,"endColumn":6},{"ruleId":"235","severity":1,"message":"236","line":3,"column":29,"nodeType":"237","messageId":"238","endLine":3,"endColumn":32},{"ruleId":"235","severity":1,"message":"239","line":15,"column":12,"nodeType":"237","messageId":"238","endLine":15,"endColumn":19},"no-native-reassign",["240"],"no-negated-in-lhs",["241"],["240"],["241"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'criacao' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]